<?php

/**
 * @file
 * Twitter module hooks.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_theme().
 */
function twitter_feed_theme($existing, $type, $theme, $path) {
  return [
    'twitter_feed_item' => [
      'template' => 'twitter-feed-item',
      'variables' => ['tweet' => NULL],
    ],
  ];
}

/**
 * Implements hook_libraries_info().
 */
function twitter_feed_libraries_info() {
  $libraries['timeago'] = [
    'name' => 'TimeAgo',
    'vendor url' => 'http://timeago.yarp.com',
    'download url' => 'https://github.com/rmm5t/jquery-timeago/zipball/v1.5.2',
    'version arguments' => [
      'file' => 'jquery.timeago.js',
      // @version 1.5.2
      'pattern' => '@version\s+([0-9a-zA-Z\.-]+)@',
      'lines' => 10,
    ],
    'files' => [
      'js' => [
        'jquery.timeago.js',
      ],
    ],
  ];

  return $libraries;
}

/**
 * Implements hook_library_info_build().
 *
 * We also define Timeago through the core library callbacks.
 */
function twitter_feed_library_info_build() {
  $lib = twitter_feed_libraries_info();
  $libraries = [];
  $library_path = NULL;

  // @todo Remove backward compatibility conditions when Drupal requirement will
  // be set to 8.9.0. See https://www.drupal.org/node/3099614
  if (\Drupal::hasService('library.libraries_directory_file_finder')) {
    /** @var \Drupal\Core\Asset\LibrariesDirectoryFileFinder $library_file_finder */
    $library_path = \Drupal::service('library.libraries_directory_file_finder')->find('timeago');
  }
  elseif (\Drupal::moduleHandler()->moduleExists('libraries')) {
    $library_path = libraries_get_path('timeago');
  }

  if (empty($library_path)) {
    return NULL;
  }

  if (strpos($library_path, '/') !== 0) {
    $library_path = '/' . $library_path;
  }

  $libraries['timeago'] = [
    'title' => $lib['timeago']['name'],
    'remote' => $lib['timeago']['vendor url'],
    'version' => '1.5.2',
    'license' => [
      'name' => 'MIT',
      'url' => 'https://github.com/rmm5t/jquery-timeago/raw/master/LICENSE.txt',
      'gpl-compatible' => TRUE,
    ],
    'dependencies' => [
      'core/jquery',
    ],
    'js' => [
      $library_path . '/jquery.timeago.js' => [
        'scope' => 'footer',
      ],
    ],
  ];

  $languages = twitter_feed_timeago_languages();
  foreach ($languages as $language_name) {
    $libraries['timeago_' . $language_name] = [
      'title' => $lib['timeago']['name'],
      'remote' => $lib['timeago']['vendor url'],
      'version' => '1.5.2',
      'license' => [
        'name' => 'MIT',
        'url' => 'https://github.com/rmm5t/jquery-timeago/raw/master/LICENSE.txt',
        'gpl-compatible' => TRUE,
      ],
      'dependencies' => [
        'core/jquery',
      ],
      'js' => [
        $library_path . '/locales/jquery.timeago.' . $language_name . '.js' => [
          'scope' => 'footer',
        ],
      ],
    ];
  }

  return $libraries;
}

/**
 * Get timeago languages.
 *
 * @return array
 *   The sorted timeago languages.
 */
function twitter_feed_timeago_languages() {
  $path = NULL;
  // @todo Remove backward compatibility conditions when Drupal requirement will
  // be set to 8.9.0. See https://www.drupal.org/node/3099614
  if (\Drupal::hasService('library.libraries_directory_file_finder')) {
    /** @var \Drupal\Core\Asset\LibrariesDirectoryFileFinder $library_file_finder */
    $path = \Drupal::service('library.libraries_directory_file_finder')->find('timeago');
  }
  elseif (\Drupal::moduleHandler()->moduleExists('libraries')) {
    $path = libraries_get_path('timeago');
  }

  if (empty($path)) {
    return [];
  }

  $files = \Drupal::service('file_system')->scanDirectory("$path/locales", '/timeago\..{2,14}\.js$/i', ['recurse' => FALSE, 'key' => 'name']);
  $timeago_locales = [];

  if ($files) {
    foreach ($files as $name => $file) {
      preg_match('/timeago\.(.{2,14})$/i', $name, $matches);
      if ($matches[1]) {
        $timeago_locales[$matches[1]] = $matches[1];
      }
    }
  }
  ksort($timeago_locales);

  return $timeago_locales;
}

/**
 * Implements hook_preprocess_twitter_feed_item().
 */
function template_preprocess_twitter_feed_item(&$vars) {
  $tweet = $vars['tweet'];
  // Creates a fake input_format so we can use some internal Drupal filters.
  $fake_filter = new stdClass();
  $fake_filter->settings = ['filter_url_length' => 72];
  // Converts URLs to links and line-breaks to paragraphs.
  $vars['text'] = ['#markup' => _filter_autop(_filter_url($tweet->full_text, $fake_filter))];
  $vars['text']['#markup'] = preg_replace('/(^|[^a-z0-9_])@([a-z0-9_]+)/i', '$1<a href="https://twitter.com/$2" target="_blank">@$2</a>', $vars['text']['#markup']);
  $vars['text']['#markup'] = preg_replace('/(^|[^a-z0-9_])#([a-z0-9_]+)/i', '$1<a href="https://twitter.com/hashtag/$2" target="_blank">#$2</a>', $vars['text']['#markup']);
  // This is the datestamp that jQuery timeago expects.
  $vars['date']['stamp'] = date('c', strtotime($tweet->created_at));
  $vars['date']['clean'] = \Drupal::service('date.formatter')->format(strtotime($tweet->created_at), 'short');
  $vars['source']['screen_name'] = $tweet->user->screen_name;
  $vars['source']['name'] = $tweet->user->name;
}

/**
 * Implements hook_help().
 *
 * @inheritdoc
 */
function twitter_feed_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.twitter_feed':
      $text = file_get_contents(dirname(__FILE__) . "/README.md");
      if (!\Drupal::moduleHandler()->moduleExists('markdown')) {
        return '<pre>' . $text . '</pre>';
      }
      else {
        // Use the Markdown filter to render the README.
        $filter_manager = \Drupal::service('plugin.manager.filter');
        $settings = \Drupal::configFactory()->get('markdown.settings')->getRawData();
        $config = ['settings' => $settings];
        $filter = $filter_manager->createInstance('markdown', $config);
        return $filter->process($text, 'en');
      }
  }
  return NULL;
}
